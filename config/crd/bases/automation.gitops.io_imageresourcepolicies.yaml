---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: imageresourcepolicies.automation.gitops.io
spec:
  group: automation.gitops.io
  names:
    kind: ImageResourcePolicy
    listKind: ImageResourcePolicyList
    plural: imageresourcepolicies
    singular: imageresourcepolicy
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ImageResourcePolicy is the Schema for the imageresourcepolicies
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ImageResourcePolicySpec defines the desired state of ImageResourcePolicy
            properties:
              aws:
                description: AWS defines AWS authentication configuration (optional)
                properties:
                  roleArn:
                    description: RoleArn for IAM role-based authentication (optional)
                    type: string
                  secretRef:
                    description: SecretRef for AWS credentials (optional)
                    properties:
                      name:
                        description: Name of the Secret resource
                        type: string
                    required:
                    - name
                    type: object
                type: object
              ecrRepository:
                description: ECRRepository defines the ECR repository to monitor
                properties:
                  imageNamePattern:
                    description: |-
                      ImageNamePattern for image name-based matching across all repositories (e.g., "nginx-base", "*-service")
                      Exactly one of RepositoryPattern, ImageNamePattern, or ImagePattern must be specified
                    type: string
                  imagePattern:
                    description: |-
                      ImagePattern for combined repository and image pattern matching (e.g., "team-a/*:v*", "*/nginx:stable-*")
                      Exactly one of RepositoryPattern, ImageNamePattern, or ImagePattern must be specified
                    type: string
                  maxConcurrentScans:
                    default: 10
                    description: 'MaxConcurrentScans limits the number of concurrent
                      repository scans (default: 10)'
                    format: int32
                    maximum: 50
                    minimum: 1
                    type: integer
                  maxRepositories:
                    default: 50
                    description: 'MaxRepositories limits the maximum number of repositories
                      to scan (default: 50)'
                    format: int32
                    maximum: 200
                    minimum: 1
                    type: integer
                  region:
                    description: Region is the AWS region (e.g., "us-east-1")
                    type: string
                  repositoryPattern:
                    description: |-
                      RepositoryPattern for pattern-based repository matching (e.g., "team-a/*", "my-service")
                      Exactly one of RepositoryPattern, ImageNamePattern, or ImagePattern must be specified
                    type: string
                  scanTimeout:
                    default: 5m
                    description: 'ScanTimeout specifies the timeout for the entire
                      scan operation (default: "5m")'
                    type: string
                required:
                - region
                type: object
              policy:
                description: Policy defines the image selection criteria
                properties:
                  alphabetical:
                    description: Alphabetical policy for selecting images by alphabetical
                      order
                    properties:
                      order:
                        default: asc
                        description: Order specifies the sorting order ("asc" or "desc")
                        enum:
                        - asc
                        - desc
                        type: string
                    type: object
                  pattern:
                    description: Pattern policy for selecting images by regular expression
                    properties:
                      extractPrefix:
                        default: false
                        description: |-
                          ExtractPrefix enables tag prefix extraction from regex capture groups
                          When true, the first capture group in the regex will be extracted as tag prefix
                        type: boolean
                      regex:
                        description: Regex specifies the regular expression pattern
                        type: string
                    required:
                    - regex
                    type: object
                  perRepository:
                    default: false
                    description: |-
                      PerRepository enables per-repository policy application instead of cross-repository policy
                      When true, policy is applied to each repository separately, creating ImageDetected per repository
                      When false (default), policy is applied across all repositories, typically creating fewer ImageDetected resources
                    type: boolean
                  semver:
                    description: Semver policy for selecting images by semantic version
                    properties:
                      range:
                        description: Range specifies the semver range (e.g., ">=1.0.0")
                        type: string
                    required:
                    - range
                    type: object
                type: object
              suspend:
                default: false
                description: Suspend stops the controller from processing this policy
                type: boolean
              templateRef:
                description: TemplateRef references the ResourceTemplate to use for
                  resource creation
                properties:
                  name:
                    description: Name of the ResourceTemplate
                    type: string
                  namespace:
                    description: Namespace of the ResourceTemplate (optional, defaults
                      to same namespace)
                    type: string
                required:
                - name
                type: object
              ttlDays:
                default: 7
                description: |-
                  TTLDays specifies the number of days after which generated ImageDetected resources will be cleaned up
                  Default is 7 days. Set to 0 to disable automatic cleanup.
                format: int32
                maximum: 365
                minimum: 0
                type: integer
            required:
            - ecrRepository
            - policy
            - templateRef
            type: object
          status:
            description: ImageResourcePolicyStatus defines the observed state of ImageResourcePolicy
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastScannedTime:
                description: LastScannedTime is the last time the ECR repository was
                  scanned
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the last generation observed by
                  the controller
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
