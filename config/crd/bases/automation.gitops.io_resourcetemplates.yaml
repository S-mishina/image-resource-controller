---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: resourcetemplates.automation.gitops.io
spec:
  group: automation.gitops.io
  names:
    kind: ResourceTemplate
    listKind: ResourceTemplateList
    plural: resourcetemplates
    singular: resourcetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ResourceTemplate is the Schema for the resourcetemplates API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ResourceTemplateSpec defines the desired state of ResourceTemplate
            properties:
              gitRepository:
                description: GitRepository defines Git repository configuration for
                  this template
                properties:
                  branch:
                    default: main
                    description: 'Branch to use (default: "main")'
                    type: string
                  path:
                    default: ./
                    description: 'Path within the repository (default: "./")'
                    type: string
                  secretRef:
                    description: SecretRef for Git authentication
                    properties:
                      name:
                        description: Name of the Secret resource
                        type: string
                    required:
                    - name
                    type: object
                  url:
                    description: URL of the Git repository
                    type: string
                required:
                - url
                type: object
              multiFiles:
                description: |-
                  MultiFiles enables multi-file generation with flexible directory structure
                  When specified, the legacy 'template' field is ignored
                items:
                  description: FileTemplate defines a single file template for multi-file
                    generation
                  properties:
                    name:
                      description: Name is a unique identifier for this file template
                      type: string
                    relativePath:
                      description: |-
                        RelativePath is the path relative to gitRepository.path where this file will be created
                        Supports Go template variables like {{ .TagPrefix }}/deployments/{{ .ServiceName }}.yaml
                      type: string
                    template:
                      description: Template is the Go template string for generating
                        the file content
                      type: string
                  required:
                  - name
                  - relativePath
                  - template
                  type: object
                type: array
              template:
                description: |-
                  Template is the Go template string for generating Kubernetes resources
                  This field is used when multiFiles is not specified (legacy mode)
                type: string
              validation:
                description: Validation defines template validation settings
                properties:
                  dryRun:
                    default: true
                    description: DryRun enables dry-run validation before applying
                      templates
                    type: boolean
                type: object
              variables:
                additionalProperties:
                  type: string
                description: Variables contains additional template variables (optional)
                type: object
            required:
            - gitRepository
            type: object
          status:
            description: ResourceTemplateStatus defines the observed state of ResourceTemplate
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastValidated:
                description: LastValidated is the last time the template was validated
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the last generation observed by
                  the controller
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
